// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  provider  Provider
  streams   Stream[]
  upvotes   Upvotes[]
}

model Stream {
  id            String      @id @default(uuid())
  type          Type
  active        Boolean     @default(true)
  url           String
  extractedId   String
  title         String      @default("")
  smallImg      String      @default("")
  bigImg        String      @default("")
  played        Boolean     @default(false)
  playedTs      DateTime?
  createdAt     DateTime    @default(now())
  upvotes       Upvotes[]
  userId        String
  user          User        @relation(fields: [userId], references: [id])

  CurrentStream CurrentStream?
}

model CurrentStream {
  userId          String      @id
  streamId        String?      @unique
  stream          Stream?     @relation(fields: [streamId], references: [id])
}

model Upvotes {
  id        String      @id @default(uuid())  
  userId    String
  streamId  String
  user      User        @relation(fields: [userId], references: [id])   
  stream    Stream      @relation(fields: [streamId], references: [id], onDelete: Cascade) 
  @@unique([userId, streamId])
}

enum Type {
  Spotify 
  Youtube
}

enum Provider {
  Google
}
